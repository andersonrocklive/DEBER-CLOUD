
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FIGO
 */
public class Formulario extends javax.swing.JFrame {

    /**
     * Creates new form Formulario
     */
    public Formulario() {
        initComponents();
        setLocationRelativeTo(null);
        fondo.setBorder(new Fondo());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondo = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtFilasA = new javax.swing.JTextField();
        txtColumnasA = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFilasB = new javax.swing.JTextField();
        txtColumnasB = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMatrizA = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMatrizB = new javax.swing.JTable();
        btnCrear = new javax.swing.JButton();
        btnJunta = new javax.swing.JButton();
        btnReunion = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbMatrizRespuesta = new javax.swing.JTable();
        btnCrearP = new javax.swing.JButton();
        btnProducto = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setTitle("MATRICES BOOLEANAS");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fondo.setBackground(new java.awt.Color(204, 204, 204));
        fondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Batang", 1, 12)); // NOI18N
        jLabel2.setText("Respuesta:");
        fondo.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, -1, -1));

        jLabel3.setFont(new java.awt.Font("Batang", 1, 12)); // NOI18N
        jLabel3.setText("Filas :");
        fondo.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel4.setFont(new java.awt.Font("Batang", 1, 12)); // NOI18N
        jLabel4.setText("Columnas:");
        fondo.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, -1, -1));

        txtFilasA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFilasAActionPerformed(evt);
            }
        });
        txtFilasA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFilasAKeyTyped(evt);
            }
        });
        fondo.add(txtFilasA, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 40, -1));

        txtColumnasA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtColumnasAcaracteres(evt);
            }
        });
        fondo.add(txtColumnasA, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 40, -1));

        jLabel5.setFont(new java.awt.Font("Batang", 1, 12)); // NOI18N
        jLabel5.setText("Filas :");
        fondo.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, -1, -1));

        jLabel6.setFont(new java.awt.Font("Batang", 1, 12)); // NOI18N
        jLabel6.setText("Columnas:");
        fondo.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, -1, -1));

        txtFilasB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFilasBKeyTyped(evt);
            }
        });
        fondo.add(txtFilasB, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, 40, -1));

        txtColumnasB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtColumnasBKeyTyped(evt);
            }
        });
        fondo.add(txtColumnasB, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, 40, -1));

        tblMatrizA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblMatrizA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblMatrizAKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(tblMatrizA);

        fondo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 240, 125));

        tblMatrizB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblMatrizB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblMatrizBKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(tblMatrizB);

        fondo.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 240, 125));

        btnCrear.setFont(new java.awt.Font("Batang", 1, 12)); // NOI18N
        btnCrear.setText("Junta y Reunion");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        fondo.add(btnCrear, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 100, 240, 35));

        btnJunta.setFont(new java.awt.Font("Batang", 1, 12)); // NOI18N
        btnJunta.setText("JUNTA");
        btnJunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJuntaActionPerformed(evt);
            }
        });
        fondo.add(btnJunta, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 280, 110, 40));

        btnReunion.setFont(new java.awt.Font("Batang", 1, 12)); // NOI18N
        btnReunion.setText("REUNION");
        btnReunion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReunionActionPerformed(evt);
            }
        });
        fondo.add(btnReunion, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 330, 160, 40));

        tbMatrizRespuesta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tbMatrizRespuesta);

        fondo.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, 240, 150));

        btnCrearP.setFont(new java.awt.Font("Batang", 1, 12)); // NOI18N
        btnCrearP.setText("Producto ");
        btnCrearP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearPActionPerformed(evt);
            }
        });
        fondo.add(btnCrearP, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 160, 240, 35));

        btnProducto.setFont(new java.awt.Font("Batang", 1, 12)); // NOI18N
        btnProducto.setText("PRODUCTO");
        btnProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductoActionPerformed(evt);
            }
        });
        fondo.add(btnProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 380, 200, 41));

        jLabel7.setFont(new java.awt.Font("Batang", 1, 12)); // NOI18N
        jLabel7.setText("Crear Matrices");
        fondo.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 70, -1, -1));

        jLabel8.setFont(new java.awt.Font("Batang", 1, 14)); // NOI18N
        jLabel8.setText("Matriz B");
        fondo.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 80, -1));

        jLabel11.setFont(new java.awt.Font("Batang", 1, 14)); // NOI18N
        jLabel11.setText("Matriz A");
        fondo.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 80, -1));

        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFilasAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilasAKeyTyped
        // TODO add your handling code here:
        char code = evt.getKeyChar();
        if (code < '0' || code > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtFilasAKeyTyped

    private void txtColumnasAcaracteres(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColumnasAcaracteres
        // TODO add your handling code here:
        char code = evt.getKeyChar();
        if (code < '0' || code > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtColumnasAcaracteres

    private void txtFilasBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilasBKeyTyped
        // TODO add your handling code here:
        char code = evt.getKeyChar();
        if (code < '0' || code > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtFilasBKeyTyped

    private void txtColumnasBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColumnasBKeyTyped
        // TODO add your handling code here:
        char code = evt.getKeyChar();
        if (code < '0' || code > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtColumnasBKeyTyped

    private void tblMatrizAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMatrizAKeyTyped
        // TODO add your handling code here:
        char code = evt.getKeyChar();
        if (code < '0' || code > '1') {
            evt.consume();
        }
    }//GEN-LAST:event_tblMatrizAKeyTyped

    private void tblMatrizBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblMatrizBKeyTyped
        // TODO add your handling code here:
        char code = evt.getKeyChar();
        if (code < '0' || code > '1') {
            evt.consume();
        }
    }//GEN-LAST:event_tblMatrizBKeyTyped

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        if (txtColumnasA.getText().equals("") || txtColumnasB.getText().equals("") || txtFilasA.getText().equals("") || txtFilasB.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese todos los limites");
        } else {
            int filaA = Integer.parseInt(txtFilasA.getText());
            int columnaA = Integer.parseInt(txtColumnasA.getText());

            int filaB = Integer.parseInt(txtFilasB.getText());
            int columnasB = Integer.parseInt(txtColumnasB.getText());

            if (filaA == filaB && columnaA == columnasB) {

                DefaultTableModel dtmA = (DefaultTableModel) tblMatrizA.getModel();
                dtmA.setColumnCount(columnaA);
                dtmA.setRowCount(filaA);

                DefaultTableModel dtmB = (DefaultTableModel) tblMatrizB.getModel();
                dtmB.setColumnCount(columnaA);
                dtmB.setRowCount(filaA);

            } else {
                JOptionPane.showMessageDialog(null, "Las dimensiones de las matrices son distintas");
            }
        }
    }//GEN-LAST:event_btnCrearActionPerformed


    private void btnJuntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJuntaActionPerformed
        int x = tblMatrizA.convertColumnIndexToView(WIDTH);
        if (x > 0) {
            int fiA = Integer.parseInt(txtFilasA.getText());
            int coA = Integer.parseInt(txtColumnasA.getText());
            int fiB = Integer.parseInt(txtFilasB.getText());
            int coB = Integer.parseInt(txtColumnasB.getText());
            if (fiA == fiB && coA == coB) {
                MatrizBooleana mb = new MatrizBooleana();
                DefaultTableModel dtmA = (DefaultTableModel) tblMatrizA.getModel();
                int a[][] = new int[dtmA.getRowCount()][dtmA.getColumnCount()];//llenamos matriz             
                for (int i = 0; i < dtmA.getRowCount(); i++) {
                    for (int j = 0; j < dtmA.getColumnCount(); j++) {
                        a[i][j] = Integer.parseInt(dtmA.getValueAt(i, j) + "");
                    }
                }
                DefaultTableModel dtmB = (DefaultTableModel) tblMatrizB.getModel();
                int b[][] = new int[dtmB.getRowCount()][dtmB.getColumnCount()];
                for (int i = 0; i < dtmB.getRowCount(); i++) {
                    for (int j = 0; j < dtmB.getColumnCount(); j++) {
                        b[i][j] = Integer.parseInt(dtmB.getValueAt(i, j) + "");
                    }
                }
                //validar numero de digitos 
                int aux = 0;
                for (int i = 0; i < dtmA.getRowCount(); i++) {
                    for (int j = 0; j < dtmA.getColumnCount(); j++) {
                        if (a[i][j] < 0 || a[i][j] > 9) {
                            aux++;
                        }
                    }
                }
                for (int i = 0; i < dtmB.getRowCount(); i++) {
                    for (int j = 0; j < dtmB.getColumnCount(); j++) {
                        if (b[i][j] < 0 || b[i][j] > 9) {
                            aux++;
                        }
                    }
                }
                if (aux > 0) {
                    JOptionPane.showMessageDialog(null, "El sistema solo adminte 0 o 1");
                } else {
                    int res[][] = mb.junta(a, b);
                    DefaultTableModel dtmRes = (DefaultTableModel) tbMatrizRespuesta.getModel();
                    dtmRes.setColumnCount(res[0].length);
                    dtmRes.setRowCount(res.length);
                    for (int i = 0; i < dtmRes.getRowCount(); i++) {
                        for (int j = 0; j < dtmRes.getColumnCount(); j++) {
                            dtmRes.setValueAt(res[i][j], i, j);
                        }
                    }
                }
                // fin metyodo validado
            } else {
                JOptionPane.showMessageDialog(null, "NO CUMPLE CON LOS REQUISITOS DE UNA MATRIZ CUADRADA");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Crear la MAtriz");
        }
    }//GEN-LAST:event_btnJuntaActionPerformed

    private void btnReunionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReunionActionPerformed
        int x = tblMatrizA.convertColumnIndexToView(WIDTH);
        if (x > 0) {
            int fiA = Integer.parseInt(txtFilasA.getText());
            int coA = Integer.parseInt(txtColumnasA.getText());
            int fiB = Integer.parseInt(txtFilasB.getText());
            int coB = Integer.parseInt(txtColumnasB.getText());
//llenamos matriz
            if (fiA == fiB && coA == coB) {
                MatrizBooleana mb = new MatrizBooleana();
                DefaultTableModel dtmA = (DefaultTableModel) tblMatrizA.getModel();
                int a[][] = new int[dtmA.getRowCount()][dtmA.getColumnCount()];
                for (int i = 0; i < dtmA.getRowCount(); i++) {
                    for (int j = 0; j < dtmA.getColumnCount(); j++) {
                        a[i][j] = Integer.parseInt(dtmA.getValueAt(i, j) + "");
                    }
                }
                DefaultTableModel dtmB = (DefaultTableModel) tblMatrizB.getModel();
                int b[][] = new int[dtmB.getRowCount()][dtmB.getColumnCount()];
                for (int i = 0; i < dtmB.getRowCount(); i++) {
                    for (int j = 0; j < dtmB.getColumnCount(); j++) {
                        b[i][j] = Integer.parseInt(dtmB.getValueAt(i, j) + "");
                    }
                }
                //validar numero de digitos 
                int aux = 0;
                for (int i = 0; i < dtmA.getRowCount(); i++) {
                    for (int j = 0; j < dtmA.getColumnCount(); j++) {
                        if (a[i][j] < 0 || a[i][j] > 9) {
                            aux++;
                        }
                    }
                }
                for (int i = 0; i < dtmB.getRowCount(); i++) {
                    for (int j = 0; j < dtmB.getColumnCount(); j++) {
                        if (b[i][j] < 0 || b[i][j] > 9) {
                            aux++;
                        }
                    }
                }
                if (aux > 0) {
                    JOptionPane.showMessageDialog(null, "El sistema solo adminte 0 o 1");
                } else {
                    int res[][] = mb.reunion(a, b);
                    DefaultTableModel dtmRes = (DefaultTableModel) tbMatrizRespuesta.getModel();
                    dtmRes.setColumnCount(res[0].length);
                    dtmRes.setRowCount(res.length);
                    for (int i = 0; i < dtmRes.getRowCount(); i++) {
                        for (int j = 0; j < dtmRes.getColumnCount(); j++) {
                            dtmRes.setValueAt(res[i][j], i, j);
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "NO CUMPLE CON LOS REQUISITOS DE UNA MATRIZ CUADRADA");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Crear la MAtriz");
        }
    }//GEN-LAST:event_btnReunionActionPerformed

    private void btnCrearPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearPActionPerformed
        if (txtColumnasA.getText().equals("") || txtColumnasB.getText().equals("") || txtFilasA.getText().equals("") || txtFilasB.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese todos los limites");
        } else {
            int fA = Integer.parseInt(txtFilasA.getText());
            int cA = Integer.parseInt(txtColumnasA.getText());
            int fB = Integer.parseInt(txtFilasB.getText());
            int cB = Integer.parseInt(txtColumnasB.getText());

            if (cA == fB) {
                DefaultTableModel dtmA = (DefaultTableModel) tblMatrizA.getModel();
                dtmA.setColumnCount(cA);
                dtmA.setRowCount(fA);

                DefaultTableModel dtmB = (DefaultTableModel) tblMatrizB.getModel();
                dtmB.setColumnCount(cB);
                dtmB.setRowCount(fB);
            } else {
                JOptionPane.showMessageDialog(null, "No cumple los requisitos");
            }
        }
    }//GEN-LAST:event_btnCrearPActionPerformed

    private void btnProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductoActionPerformed
        int x = tblMatrizA.convertColumnIndexToView(WIDTH);
        if (x > 0) {
            int fiA = Integer.parseInt(txtFilasA.getText());
            int coA = Integer.parseInt(txtColumnasA.getText());
            int fiB = Integer.parseInt(txtFilasB.getText());
            int coB = Integer.parseInt(txtColumnasB.getText());
            if (coA == fiB && fiA != coB) {
                DefaultTableModel dtmA = (DefaultTableModel) tblMatrizA.getModel();//creamos matrices
                DefaultTableModel dtmB = (DefaultTableModel) tblMatrizB.getModel();
                int[][] matA = new int[dtmA.getRowCount()][dtmA.getColumnCount()];//llenamos matriz
                int[][] matB = new int[dtmB.getRowCount()][dtmB.getColumnCount()];
                for (int i = 0; i < dtmA.getRowCount(); i++) {
                    for (int j = 0; j < dtmA.getColumnCount(); j++) {
                        matA[i][j] = Integer.parseInt(dtmA.getValueAt(i, j) + "");
                    }
                }
                for (int i = 0; i < dtmB.getRowCount(); i++) {
                    for (int j = 0; j < dtmB.getColumnCount(); j++) {
                        matB[i][j] = Integer.parseInt(dtmB.getValueAt(i, j) + "");
                    }
                }
                //validar numero de digitos 
                int aux = 0;
                for (int i = 0; i < dtmA.getRowCount(); i++) {
                    for (int j = 0; j < dtmA.getColumnCount(); j++) {
                        if (matA[i][j] < 0 || matA[i][j] > 9) {
                            aux++;
                        }
                    }
                }
                for (int i = 0; i < dtmB.getRowCount(); i++) {
                    for (int j = 0; j < dtmB.getColumnCount(); j++) {
                        if (matB[i][j] < 0 || matB[i][j] > 9) {
                            aux++;
                        }
                    }
                }
                if (aux > 0) {
                    JOptionPane.showMessageDialog(null, "El sistema solo adminte 0 o 1");
                } else {
                    MatrizBooleana pb = new MatrizBooleana();
                    int res[][] = pb.productoBooleano(matA, matB);
                    DefaultTableModel dtmRes = (DefaultTableModel) tbMatrizRespuesta.getModel();
                    dtmRes.setColumnCount(res[0].length);
                    dtmRes.setRowCount(res.length);
                    for (int i = 0; i < dtmRes.getRowCount(); i++) {
                        for (int j = 0; j < dtmRes.getColumnCount(); j++) {
                            dtmRes.setValueAt(res[i][j], i, j);
                        }
                    }
                }
            } else {

                JOptionPane.showMessageDialog(null, "NO CUMPLE CON LOS REQUISITOS");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Crear la MAtriz");
        }
    }

    public void caracters(java.awt.event.KeyEvent evt) {
        char code = evt.getKeyChar();
        if (code < '0' || code > '9') {
            evt.consume();
        }

    }//GEN-LAST:event_btnProductoActionPerformed

    private void txtFilasAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFilasAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFilasAActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnCrearP;
    private javax.swing.JButton btnJunta;
    private javax.swing.JButton btnProducto;
    private javax.swing.JButton btnReunion;
    private javax.swing.JPanel fondo;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbMatrizRespuesta;
    private javax.swing.JTable tblMatrizA;
    private javax.swing.JTable tblMatrizB;
    private javax.swing.JTextField txtColumnasA;
    private javax.swing.JTextField txtColumnasB;
    private javax.swing.JTextField txtFilasA;
    private javax.swing.JTextField txtFilasB;
    // End of variables declaration//GEN-END:variables
}
